use bevy::prelude::*;

use crate::input::component::{MovementInput, MovementStats, MovementState, PlayerControlled};

/// –°–∏—Å—Ç–µ–º–∞ –ø—Ä—ã–∂–∫–æ–≤
pub fn jump_system(
    mut query: Query<(
        &MovementInput,
        &MovementStats,
        &mut MovementState,
    ), With<PlayerControlled>>,
) {
    for (input, stats, mut state) in &mut query {
        // –ü—Ä—ã–∂–æ–∫ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –∑–µ–º–ª–µ –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
        if input.jump && state.is_grounded && !state.is_crouching {
            state.velocity.y = stats.jump_force;
            state.is_grounded = false; // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–±–∏—Ä–∞–µ–º —Ñ–ª–∞–≥ –∑–µ–º–ª–∏
            
            println!("ü¶ò –ü—Ä—ã–∂–æ–∫! –°–∫–æ—Ä–æ—Å—Ç—å Y: {}", stats.jump_force);
        }
    }
}
